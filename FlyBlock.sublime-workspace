{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Block",
				"BlockType"
			],
			[
				"bian",
				"bianse_plist"
			],
			[
				"cloud",
				"cloud2"
			],
			[
				"M",
				"MOVE_INTERVAL"
			],
			[
				"anch",
				"anchorY"
			],
			[
				"anc",
				"anchorX"
			],
			[
				"_clou",
				"_cloudRes"
			],
			[
				"_col",
				"_columnNum"
			],
			[
				"colu",
				"columnLayer"
			],
			[
				"an",
				"animationCache"
			],
			[
				"tex",
				"texiao00"
			],
			[
				"column_c",
				"column_coll_effect_plist"
			],
			[
				"cl",
				"cleanPublish"
			],
			[
				"fun",
				"function"
			],
			[
				"in",
				"invincible"
			],
			[
				"_game",
				"_gameOver"
			],
			[
				"blo",
				"block"
			],
			[
				"bl",
				"block"
			],
			[
				"_mo",
				"_moveBrick"
			],
			[
				"BRICK",
				"brick"
			],
			[
				"B",
				"BrickCache"
			],
			[
				"Br",
				"Brick"
			],
			[
				"for",
				"formatTime"
			],
			[
				"ach",
				"anchorX"
			],
			[
				"time",
				"timeLabel"
			],
			[
				"tie",
				"timeLabel"
			],
			[
				"scor",
				"scoreLabel"
			],
			[
				"_colu",
				"_columns"
			],
			[
				"Co",
				"ColumnCache"
			],
			[
				"Bl",
				"Block"
			],
			[
				"Colum",
				"ColumnCache"
			],
			[
				"Col",
				"Column"
			],
			[
				"de",
				"delayTime"
			],
			[
				"sc",
				"scoreBoard"
			],
			[
				"shar",
				"shareBtn"
			],
			[
				"slide",
				"slideToPrev"
			],
			[
				"sl",
				"slideToPrev"
			],
			[
				"teach",
				"teachSprites"
			],
			[
				"G",
				"g_gameScene"
			],
			[
				"swi",
				"switch"
			],
			[
				"start",
				"start_btn"
			],
			[
				"add",
				"addButton"
			],
			[
				"te",
				"teach3"
			],
			[
				"getP",
				"getPosition"
			],
			[
				"b",
				"block"
			],
			[
				"rect",
				"rectContainsPoint"
			],
			[
				"rec",
				"rectContainsPoint"
			],
			[
				"getMax",
				"getMaxX"
			],
			[
				"getMin",
				"getMinX"
			],
			[
				"_",
				"_label"
			],
			[
				"Blo",
				"Block"
			],
			[
				"Bloc",
				"BlockType"
			],
			[
				"_co",
				"_columns"
			],
			[
				"get",
				"getPosition"
			],
			[
				"Ro",
				"rotateTo"
			],
			[
				"rotate",
				"rotateTo"
			],
			[
				"rot",
				"rotateAction"
			],
			[
				"event",
				"eventManager"
			],
			[
				"bL",
				"BlockCache"
			],
			[
				"Colu",
				"ColumnCache"
			],
			[
				"fl",
				"fly_orange"
			],
			[
				"fy",
				"fly_red"
			],
			[
				"co",
				"column_yellow"
			],
			[
				"col",
				"column_orange"
			],
			[
				"w",
				"width"
			],
			[
				"leel",
				"level_cloud3"
			],
			[
				"level",
				"level_cloud2"
			],
			[
				"lev",
				"level_cloud1"
			],
			[
				"leve",
				"level_bg3"
			],
			[
				"lee",
				"level_bg2"
			],
			[
				"cloudL",
				"cloudLayer1"
			],
			[
				"load",
				"loadedCount"
			],
			[
				"pre",
				"percent"
			],
			[
				"res",
				"resources"
			],
			[
				"bg",
				"bgLayer"
			],
			[
				"HelloWol",
				"HelloWorldLayer"
			],
			[
				"img",
				"imgs"
			],
			[
				"pro",
				"product"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"mari",
				"margin"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"text",
				"text-align"
			],
			[
				"lua",
				"luajit"
			],
			[
				"fu",
				"fullSrcPath"
			],
			[
				"full",
				"fullDestPath"
			],
			[
				"ful",
				"fullDestPath"
			],
			[
				"com",
				"companyName"
			],
			[
				"ch",
				"cheerio"
			],
			[
				"d",
				"downloadPage"
			],
			[
				"Stand",
				"StandUp"
			],
			[
				"SH",
				"ShakeAPaw"
			],
			[
				"l",
				"LayDown"
			],
			[
				"Sit",
				"SitDown"
			],
			[
				"Sh",
				"ShakeAPaw"
			],
			[
				"Lay",
				"LayDown"
			],
			[
				"test",
				"test2"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "GameLayer = BaseLayer.extend\n	_className: \"GameLayer\"\n	_bgNum: 3\n	_bgRes: [\"res/level_bg1.png\", \"res/level_bg2.png\", \"res/level_bg3.png\"]\n	_cloudRes: [\"res/level_cloud1.png\", \"res/level_cloud2.png\", \"res/level_cloud3.png\"]\n	a: 9.8 # 加速度\n	v0: 10 # 初速度\n	time: 0 # 时间\n	# v = v0 + at\n\n	ctor: ()->\n		@_super()\n		cc.log \"#{@_className} ctor\"\n		#添加大图\n		cc.spriteFrameCache.addSpriteFrames \"res/fly_blue.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/fly_green.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/fly_purple.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/fly_red.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/fly_yellow.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/brick.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/column_coll_effect.plist\"\n		cc.spriteFrameCache.addSpriteFrames \"res/bianse.plist\"\n		\n		@_bgIndex = 0\n		@_cloudLayers = []\n		@_columns = []\n		@_columnNum = 0\n		@_score = 0\n		@_gameTime = 0\n		@_invincibleTime = 0\n		@_gameOver = false\n		@_blockQueue = []\n		@_bricks = [] # 砖块\n		@_floatBlocks = [] # 漂浮方块\n		@action = null\n\n\n		@_bgIndex = getRandomInt(0, @_bgNum)\n		@setBackground(@_bgRes[@_bgIndex])\n\n		@createUI()\n\n		#触摸事件\n		#destop\n		if cc.sys.capabilities.hasOwnProperty('mouse')\n			cc.eventManager.addListener\n				event: cc.EventListener.MOUSE\n				onMouseDown: => \n					@touch()\n				, @\n		#device\n		if cc.sys.capabilities.hasOwnProperty 'touches'\n			cc.eventManager.addListener\n				event: cc.EventListener.TOUCH_ONE_BY_ONE\n				swallowTouches: true\n				onTouchBegan: ()=>\n					@touch()\n					return true\n				, @\n		if cc.sys.capabilities.hasOwnProperty \"keyboard\"\n			cc.eventManager.addListener\n				event: cc.EventListener.KEYBOARD\n				onKeyPressed: (key, evnet)->\n					cc.log 'key pressed ' + key\n				onKeyReleased: (key, event)->\n					cc.log \"key pressed #{key}\"\n					if key is 6\n						cc.LoaderScene.preload g_startScene, ()->\n							cc.director.runScene new StartScene()\n			, @\n\n	createUI: ()->\n		#云层\n		@cloudLayer = new cc.Layer()\n		@cloud1 = new cc.Sprite @_cloudRes[@_bgIndex]\n		@cloud1.attr\n			anchorX: 0\n			anchorY: 0\n			x: 0\n			y: 0\n		@cloudLayer.addChild @cloud1\n\n		@cloud2 = new cc.Sprite @_cloudRes[@_bgIndex]\n		@cloud2.attr\n			anchorX: 0\n			anchorY: 0\n			x: @cloud1.x + @cloud1.width\n			y: 0\n		@cloudLayer.addChild @cloud2\n\n		@addChild @cloudLayer\n\n		# w = 0\n		# for i in [0..1]\n		# 	cloudLayer = new cc.Layer()\n		# 	cloudLayer.setPosition w, 0\n		# 	cloud = new cc.Sprite @_cloudRes[@_bgIndex]\n		# 	cloud.attr\n		# 		anchorX: 0\n		# 		anchorY: 0\n		# 		x: 0\n		# 		y: 0\n\n		# 	cloudLayer.addChild cloud\n		# 	cloudLayer.setContentSize cloud.getContentSize()\n		# 	@_cloudLayers.push cloudLayer\n		# 	@addChild cloudLayer\n		# 	w += cloudLayer.getContentSize().width\n\n		@columnLayer = new cc.Layer()\n		@addChild @columnLayer, 3\n		@_addColumn()\n\n		# 分数\n		@_label = new cc.LabelTTF(\"0\", \"Ariel\", 100)\n		@_label.attr\n			x: @_winSize.width * 0.5\n			y: @_winSize.height * 0.8\n		@addChild @_label, 10\n\n		bestScore = cc.sys.localStorage.getItem(\"best\") or 0\n\n		@bestLabel = new cc.LabelTTF \"Best: #{bestScore}\", \"Ariel\", 40\n		@bestLabel.attr\n			anchorX: 0\n			anchory: 1\n			x: 10\n			y: @_winSize.height - 40\n		@addChild @bestLabel\n\n		# 方块\n		for i in [0...5]\n			@_blockQueue.push(BlockType[getRandomInt(0, BlockType.length)])\n\n		blockType = BlockType[getRandomInt(0, BlockType.length)]\n		block = @block = Block.getOrCreate blockType\n		block.attr\n			x: @_winSize.width * 0.5,\n			y: @_winSize.height * 0.7\n		@addChild block, 2\n\n		board = @scoreBoard = new cc.Sprite \"res/score_board.png\"\n		board.x = @_winSize.width/2\n		board.y = -board.getContentSize().height/2\n		@addChild board, 5\n\n		againBtn = @againBtn = new ccui.Button()\n		againBtn.loadTextureNormal 'res/again_btn.png'\n		againBtn.setTouchEnabled true\n		againBtn.setPressedActionEnabled true\n		againBtn.x = @_winSize.width * 0.3\n		againBtn.y = -againBtn.getContentSize().height/2\n		againBtn.addTouchEventListener (sender, type)=>\n			switch type\n				when ccui.Widget.TOUCH_ENDED\n					MyLoaderScene.preload g_gameScene, ()->\n					cc.director.runScene new GameScene()\n		, @\n		@addChild againBtn, 5\n\n		shareBtn = @shareBtn = new ccui.Button()\n		shareBtn.loadTextureNormal 'res/share_btn.png'\n		shareBtn.setTouchEnabled true\n		shareBtn.setPressedActionEnabled true\n		shareBtn.x = @_winSize.width * 0.7\n		shareBtn.y = -shareBtn.getContentSize().height/2\n		shareBtn.addTouchEventListener (sender, type)=>\n			switch type\n				when ccui.Widget.TOUCH_ENDED\n					if not cc.sys.isNative\n						@addChild new ShareUI(), 100\n						if @_score > 0\n							share(1, @_score)\n						else\n							share(0)\n					else\n						if cc.sys.isNative\n							jsb.reflection.callStaticMethod G.JAVA_CLASS,\n								\"hideSpotAd\", \"()V\"\n						@takeScreenshot()\n		, @\n		@addChild shareBtn, 5\n\n\n	touch: ()->\n		if @_gameOver\n			return\n		cc.audioEngine.playEffect \"res/touch.mp3\"\n\n		@block.stopAction @action\n		@block.state = BlockState.UP\n		time = 0.2\n		@action = cc.sequence cc.spawn(cc.rotateTo(time, -15),\n			cc.moveTo(time, cc.pAdd(@block.getPosition(), cc.p(0, 70)))\n			), cc.callFunc ()=>\n				#cc.log 'cc.callFunc'\n				@block.state = BlockState.DOWN\n				@block.runAction(cc.rotateTo(time, 15))\n				@time = 0\n\n		@block.runAction @action\n\n	onEnter: ()->\n		@_super()\n		@scheduleUpdate()\n		if cc.audioEngine.preloadEffect\n			cc.log 'preload effect'\n			cc.audioEngine.preloadEffect \"res/touch.mp3\" \n			cc.audioEngine.preloadEffect \"res/score.mp3\"\n\n	onExit: ()->\n		cc.log 'onExit'\n		Block.cleanCache()\n		Column.cleanCache()\n		Brick.cleanCache()\n		if cc.sys.isNative\n			jsb.reflection.callStaticMethod G.JAVA_CLASS,\n				\"hideBannerAd\", \"()V\"\n			jsb.reflection.callStaticMethod G.JAVA_CLASS,\n				\"hideSpotAd\", \"()V\"\n		@_super()\n\n	update: (dt)->\n		# if cc.sys.os is cc.sys.OS_ANDROID\n		#  	cc.audioEngine.playEffect \"res/touch.mp3\"\n		@_gameTime += dt\n		if not @_gameOver\n			@_moveCloudLayer(dt)\n			@_moveColumn(dt)\n			@_addColumn(dt)\n			@_moveBrick(dt)\n			@_addBrick(dt)\n			@_updateBlock(dt)\n			@_checkIsCollide(dt)\n		else\n			@unscheduleUpdate()\n\n	_moveCloudLayer: (dt)->\n		@cloud1.x -= G.MOVE_INTERVAL * dt\n		@cloud2.x -= G.MOVE_INTERVAL * dt\n		if @cloud1.x + @cloud1.width < 0\n			@cloud1.x = @cloud1.width\n			@cloud2.x = 0\n		if @cloud2.x + @cloud2.width < 0\n			@cloud2.x = @cloud2.width\n			@cloud1.x = 0\n		\n		return 0\n\n	_moveColumn: (dt)->\n		@columnLayer.x = @columnLayer.x - G.MOVE_INTERVAL * dt\n		if @_columns.length > 0\n			pos = @columnLayer.convertToWorldSpace @_columns[0].getPosition()\n			if pos.x + @_columns[0].width / 2 < 0\n				@_columns[0].destroy()\n				@_columnNum--\n				@_columns.shift()\n\n	_addColumn: (dt)->\n		if @_columnNum < G.ColumnNum\n			type = getRandomInt 0, ColumnType.length\n			# 判断是否给之前颜色相同\n			if @_columnNum > 0 and ColumnType[type].id is @_columns[@_columnNum-1].type.id\n				@_addColumn()\n			else\n				column = Column.getOrCreate ColumnType[type]\n				size = column.getContentSize()\n				height = getRandomInt(0, size.height/2)\n				x = if @_columnNum > 0 then @_columns[@_columnNum-1].getPosition().x else -size.width # 最后的一个column的x坐标或者0\n\n				column.setPosition cc.p(x + size.width, height)\n				@_columns.push column\n				if not column.getParent()\n					@columnLayer.addChild column, 3\n				@_columnNum++\n				@_addColumn()\n\n	# 添加砖块\n	_addBrick: (dt)->\n		if @_bricks.length > G.BRICK_NUM\n			return\n		num = getRandomInt(0, 10)\n		cc.log num\n		if num < 3	\n			type = BrickType[getRandomInt(0, BrickType.length-1)]\n		else\n			type = BrickType[BrickType.length-1]\n		brick = Brick.getOrCreate(type)\n		pos = cc.p(@_winSize.width + 100, @_winSize.height * 0.7)\n		randomX = getRandomInt(200, 700)\n		randomY = getRandomInt(@_winSize.height/3, @_winSize.height * 0.9)\n		if @_bricks.length > 0\n			pos = @_bricks[@_bricks.length-1].getPosition()\n		pos.x += randomX\n		pos.y = randomY\n		brick.setPosition pos\n		if not brick.getParent()\n			@addChild brick\n		@_bricks.push brick\n\n	_moveBrick: (dt)->\n		for c in @_bricks\n			do(c)->\n				pos = c.getPosition()\n				c.setPosition cc.p(pos.x - G.MOVE_INTERVAL * dt, pos.y)\n\n		if @_bricks.length > 0 and @_bricks[0].getPosition().x + @_bricks[0].getContentSize().width/2 < 0\n			@_bricks[0].destroy()\n			@_bricks.shift()\n\n	_updateBlock: (dt)->\n		if @block.invincible\n			@_invincibleTime += dt\n			if @_invincibleTime > G.INVINCIBLE_TIME\n				@block.opacity = 255\n				@block.invincible = false\n			else\n				if not @block.isFadein\n					@block.opacity = if @block.opacity - 10 < 100 then 100 else @block.opacity -= 10\n					@block.isFadein = true if @block.opacity is 100\n				else\n					@block.opacity = if @block.opacity + 10 > 255 then 255 else @block.opacity += 10\n					@block.isFadein = false if @block.opacity is 255\n		if @block.state is BlockState.NONE\n			return\n		else if @block.state is BlockState.DOWN\n			@time += dt\n			v = @v0 + @a * @time * G.PTM_RATIO\n			@block.setPosition cc.pSub @block.getPosition(), cc.p(0, v * dt)\n			return\n\n	_checkIsCollide: (dt)->\n		column = null\n		pos = @block.getPosition()\n		blockRect = cc.rect(pos.x - 40, pos.y - 40, 90, 90);\n		for i in [0...@_columns.length]\n			column = @_columns[i]\n			rect = column.getBoundingBoxToWorld()\n			if cc.rectContainsPoint(rect, @block.getPosition()) or\n				cc.rectIntersectsRect(rect, blockRect)\n					cc.log \"碰撞啦\"\n					if @block.type.id isnt column.type.id\n						@_gameOver = true\n						@gameOver()\n					else\n						cc.log \"Bingo\"\n						cc.audioEngine.playEffect 'res/score.mp3'\n						x = column.x\n						y = column.y + 20\n						Effect.columnCollEffect @columnLayer, cc.p(x, y)\n						@_score++\n						@_label.setString(@_score)\n						@block.destroy()\n						@_nextBlock()\n						columnPos = column.getPosition()\n						column.runAction cc.sequence(cc.moveTo(0.02, cc.p(columnPos.x, columnPos.y - 20)),\n							cc.moveTo(0.02, cc.p(columnPos.x, columnPos.y + 15)),\n							cc.moveTo(0.02, cc.p(columnPos.x, columnPos.y - 10)),\n							cc.moveTo(0.02, cc.p(columnPos.x, columnPos.y + 5)),\n							cc.moveTo(0.02, cc.p(columnPos.x, columnPos.y - 3)),\n							cc.moveTo(0.02, cc.p(columnPos.x, columnPos.y)))\n					return\n		# 砖块的碰撞\n		if not @block.invincible\n			dis = @block.width\n			# cc.log \"dis #{dis}\"\n			for brick in @_bricks\n				do(brick)=>\n					if cc.rectIntersectsRect(brick.getBoundingBox(), blockRect)\n						if brick.type.id is BrickType.length-1\n							@_gameOver = true\n							@gameOver()\n						else\n							changeType = getRandomInt(0, BlockType.length)\n							@block.changeType(BlockType[changeType])\n							@block.invincible = true\n							@_invincibleTime = 0\n							brick.destroy()\n\n	_nextBlock: ()->\n		@_invincibleTime = 0\n		type = @_blockQueue.shift()\n		@_blockQueue.push BlockType[getRandomInt(0, BlockType.length)]\n		block = @block = Block.getOrCreate type\n		block.setPosition @_winSize.width/2, @_winSize.height\n		block.state = BlockState.DOWN\n		@time = 0\n		if not block.getParent()\n			@addChild block, 2\n\n	gameOver: ()->\n		@scoreBoard.runAction cc.sequence cc.delayTime(0.2),\n			cc.moveTo(0.3, cc.p(@_winSize.width/2, @_winSize.height*0.65))\n\n		@againBtn.runAction cc.sequence cc.delayTime(0.5),\n			cc.moveTo(0.3, cc.p(@_winSize.width * 0.3, @_winSize.height*0.45))\n\n		@shareBtn.runAction cc.sequence cc.delayTime(0.5),\n			cc.moveTo(0.3, cc.p(@_winSize.width*0.7, @_winSize.height*0.45))\n\n		bestScore = cc.sys.localStorage.getItem(\"best\") or 0\n		cc.log bestScore\n		if @_score > bestScore \n			cc.log '新纪录'\n			cc.sys.localStorage.setItem(\"best\", @_score)\n\n		@_label.visible = false\n		scoreLabel = new cc.LabelBMFont(\"#{@_score}\",  \"res/font.fnt\");\n		scoreLabel.x = 170\n		scoreLabel.y = 115\n		scoreLabel.anchorX = 0\n		@scoreBoard.addChild scoreLabel\n\n		timeLabel = new cc.LabelBMFont(formatTime(@_gameTime), \"res/font.fnt\")\n		timeLabel.x = 170\n		timeLabel.y = 45\n		timeLabel.anchorX = 0\n		@scoreBoard.addChild timeLabel\n		if cc.sys.isNative\n			jsb.reflection.callStaticMethod G.JAVA_CLASS,\n				\"showBannerAd\", \"()V\"\n			jsb.reflection.callStaticMethod G.JAVA_CLASS,\n				\"showSpotAd\", \"()V\"\n\n	takeScreenshot: ()->\n		cc.log 'takeScreenshot'\n		texture = new cc.RenderTexture @_winSize.width, @_winSize.height\n		texture.setPosition cc.p(@_winSize.width/2, @_winSize.height/2)\n		texture.begin()\n		cc.director.getRunningScene().visit()\n		texture.end()\n		texture.saveToFile(\"screenshot.png\", cc.IMAGE_FORMAT_PNG)\n		if cc.sys.isNative\n			jsb.reflection.callStaticMethod G.JAVA_CLASS,\n			\"share\", \"(Ljava/lang/String;)V\", \"我在玩空降小色块,成功解救了#{@_score}个小方块,麽麽哒~\"\n\n\nGameScene = cc.Scene.extend\n	onEnter: ()->\n		@_super()\n		layer = new GameLayer()\n		@addChild layer",
			"file": "coffee/GameScene.coffee",
			"file_size": 12569,
			"file_write_time": 130648586170000000,
			"settings":
			{
				"buffer_size": 12402,
				"line_ending": "Unix"
			}
		},
		{
			"file": "frameworks/runtime-src/proj.android/AndroidManifest.xml",
			"settings":
			{
				"buffer_size": 3303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "coffee/Resources.coffee",
			"settings":
			{
				"buffer_size": 3232,
				"line_ending": "Unix"
			}
		},
		{
			"file": "coffee/Effect.coffee",
			"settings":
			{
				"buffer_size": 787,
				"line_ending": "Unix"
			}
		},
		{
			"file": "coffee/GameObject/Brick.coffee",
			"settings":
			{
				"buffer_size": 965,
				"line_ending": "Unix"
			}
		},
		{
			"file": "coffee/Config/BrickType.coffee",
			"settings":
			{
				"buffer_size": 90,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 187,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/gulp.sublime-build",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android/libs/armeabi",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android/src",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android/src/org",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android/src/org/cocos2dx",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android/src/org/cocos2dx/javascript"
	],
	"file_history":
	[
		"/Users/eleven/projects/frontend/hunuo-web-frontend/src/scripts/mod/home/controllers/home-main.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/coffee/GameObject/Effect.coffee",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/project.json",
		"/Users/eleven/projects/petdog/proj.android/src/com/hunuo/game/petdog/AppActivity.java",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/frameworks/runtime-src/proj.android/assets/src/GameScene.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/libs/WeixinApi.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/GameScene.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/Config/Config.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/Config/ColumnType.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/GameObject/Column.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/MyLoaderScene.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/dest/MyLoaderScene.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/MyLoaderScene.coffee",
		"/Users/eleven/projects/petdog/proj.ios_mac/PetDog.xcodeproj/project.xcworkspace/xcuserdata/eleven.xcuserdatad/UserInterfaceState.xcuserstate",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/dest/game.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/dest/rs.js",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/module1/ui/ui.coffee",
		"/Users/eleven/projects/cocos2d-js-projects/FlyBlock/src/test.coffee",
		"/Users/eleven/projects/frontend/iot-ic-web/js/artTemplate.js",
		"/Users/eleven/projects/Android/PDFReader/settings.gradle",
		"/Users/eleven/projects/Android/PDFReader/build.gradle",
		"/Users/eleven/projects/frontend/iot-ic-web/css/style.css",
		"/Users/eleven/projects/frontend/iot-ic-web/product/preventlost.html",
		"/Users/eleven/projects/cocos2dx_projects/telecar/proj.android/build.xml",
		"/Users/eleven/projects/cocos2dx_projects/telecar/proj.android/project.properties",
		"/Users/eleven/projects/Android/SelfTimerWorkspace/SelfTimer/src/com/ihunuo/selftimer/voice/VoicePlayer.java",
		"/Users/eleven/projects/Android/SelfTimerWorkspace/SelfTimer/src/com/ihunuo/selftimer/voice/SinEncoder.java",
		"/Users/eleven/projects/frontend/iot-ic-web/publish-production.sh",
		"/Users/eleven/Desktop/中文.txt",
		"/Users/eleven/Desktop/text.txt",
		"/text.txt",
		"/Users/eleven/projects/petdog/Resources/config/sequence_actions.json",
		"/Users/eleven/projects/node/leximail/package.json",
		"/Users/eleven/projects/CocosStudio/赛车游戏/Export/CarUI/CarUI.json",
		"/Users/eleven/Documents/android-sdk-macosx/tools/ant/build.xml",
		"/Users/eleven/projects/超声波生成/main.c",
		"/Users/eleven/projects/Android/HCICloudsdk/Android/Examples/ASR_Recorder_Example/assets/AccountInfo.txt",
		"/Applications/Sublime Text.app/Contents/MacOS/changelog.txt",
		"/Users/eleven/Library/Application Support/Sublime Text 3/Packages/User/new-lua.sublime-build",
		"/Users/eleven/Library/Application Support/Sublime Text 3/Installed Packages/Lua Dev/Lua.sublime-build",
		"/Users/eleven/Library/Application Support/Sublime Text 3/Installed Packages/Lua Dev.sublime-package",
		"/Users/eleven/Library/Application Support/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/Users/eleven/projects/cocos2d-x-3.1.1/projects_lua/PetDog/frameworks/cocos2d-x/tools/bindings-generator/targets/lua/conversions.yaml",
		"/Users/eleven/projects/cocos2d-x-3.1.1/projects_lua/PetDog/frameworks/cocos2d-x/cocos/scripting/lua-bindings/script/CocoStudio.lua",
		"/Users/eleven/Library/Application Support/iPhone Simulator/7.1/Applications/075181F9-B31B-419E-B858-583F74471748/Documents/debugruntime/config.json",
		"/Users/eleven/projects/cocos2d-x-3.1.1/projects_lua/htc-htc_d610t-HC44WWS01049.json",
		"/Users/eleven/projects/node/server/static/src/module/Start/Views/StartLayer.lua",
		"/Users/eleven/projects/cocos2d-x-3.1.1test/projects_lua/SnakeGameLua/frameworks/cocos2d-x/cocos/scripting/lua-bindings/script/Cocos2d.lua",
		"/Users/eleven/projects/cocos2d-x-3.1.1/projects/petdog/Resources/hd/publish/ControlUi_1.json",
		"/Users/eleven/projects/cocos2d-x-3.1.1/projects/petdog/Resources/publish/ControlUi_1.json",
		"/Users/eleven/projects/Lua/metatable.lua",
		"/Users/eleven/Library/Application Support/Sublime Text 3/Packages/Lua Dev/Lua Dev.sublime-settings",
		"/Users/eleven/Library/Application Support/Sublime Text 3/Packages/User/Lua Dev.sublime-settings",
		"/Users/eleven/projects/Lua/table.lua"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/eleven/projects/cocos2d-js-v3.1/samples/js-moonwarriors/src",
			"/Users/eleven/projects/cocos2d-js-v3.1/samples/js-tests",
			"/Users/eleven/projects/cocos2d-js-v3.1/samples/js-tests/src",
			"/Users/eleven/projects/cocos2d-js-projects/FlyBlock",
			"/Users/eleven/projects/Android/SinVoice",
			"/Users/eleven/projects/cocos2d-x-3.1.1/projects_lua/FlipBlocks/frameworks/cocos2d-x/cocos/scripting/lua-bindings/script"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cc.spritebatch",
			"animationCache",
			"animation",
			"UserDefault",
			"stop",
			"score.mp3",
			"audioEngine.playEffect",
			"cc.audioEngine",
			"cc.audioEngine.perload",
			"cc.audioEngine",
			"cc.per",
			"ChipmunkBaseLayer",
			"EventListener",
			"column",
			"cc.log",
			"template\nResolutionPolicy",
			"template",
			"artTemplate",
			"#hn-carousel",
			"item",
			"body",
			"img",
			"322AC1A81A0C6E9100B0A936",
			"HNGravityDriveController",
			"head",
			"mPlayedLen",
			"getEmptyBuffer",
			"sho'w",
			"notifyObservers",
			"kode.facade:send",
			"onRemove",
			"menu",
			"6",
			"KeyCode",
			"DOMAIN",
			"mEngineType"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"fly"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"follow_symlinks": true,
			"path": "/Users/eleven/projects/cocos2d-js-projects/FlyBlock"
		}
	],
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "coffee/GameScene.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12402,
						"regions":
						{
						},
						"selection":
						[
							[
								7731,
								7731
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3819.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "frameworks/runtime-src/proj.android/AndroidManifest.xml",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3303,
						"regions":
						{
						},
						"selection":
						[
							[
								1948,
								2250
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 493.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "coffee/Resources.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3232,
						"regions":
						{
						},
						"selection":
						[
							[
								3230,
								3230
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 871.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "coffee/Effect.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 787,
						"regions":
						{
						},
						"selection":
						[
							[
								785,
								785
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "coffee/GameObject/Brick.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 965,
						"regions":
						{
						},
						"selection":
						[
							[
								116,
								116
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "coffee/Config/BrickType.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 90,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								90
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 187,
						"regions":
						{
						},
						"selection":
						[
							[
								158,
								160
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 242.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"selected_items":
		[
		],
		"width": 788.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 267.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
